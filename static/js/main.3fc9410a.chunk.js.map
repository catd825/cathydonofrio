{"version":3,"sources":["Containers/ProjectsContainer.js","styles.ts","Containers/AboutContainer.tsx","Containers/ContentContainer.js","Components/NewFooter.tsx","Components/NewNavbar.tsx","App.js","serviceWorker.js","index.js"],"names":["ProjectsContainer","className","id","style","width","margin","target","rel","href","CardGroup","Card","CardImg","top","src","alt","CardBody","CardTitle","CardText","size","Button","color","to","tag","Link","Left","styled","p","textAlign","AboutStyle","div","About","props","setPage","onClick","ContentContainer","React","Component","NewFooter","NewNavbar","NavbarDiv","backgroundColor","height","SpanWrapper","paddingTop","NavSpan","span","padding","App","content","PageWrapper","useState","page","AboutContainer","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3fc9410a.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardGroup,\n  CardTitle,\n  Button\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { SiReact } from \"react-icons/si\";\nimport { SiRails } from \"react-icons/si\";\n\nconst ProjectsContainer = () => {\n  return (\n    <>\n      <div\n        className=\"container\"\n        id=\"portfolio\"\n        style={{ width: \"75%\", margin: \"50px auto 100px auto\" }}\n      >\n        <h3>PROJECTS</h3>\n        <br />\n        <p className=\"left\">\n          Featured projects from Flatiron are below. All projects are available\n          on{\" \"}\n          <b>\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://github.com/catd825/\"\n            >\n              Github\n            </a>\n            .\n          </b>\n        </p>\n        <div>\n          <CardGroup>\n            <Card className=\"padding\">\n              <CardImg\n                top\n                width=\"100%\"\n                src=\"https://j.gifs.com/915YWB.gif\"\n                alt=\"budgetBuddy\"\n              />\n              <CardBody>\n                <CardTitle>\n                  <b>budgetBuddy</b>\n                </CardTitle>\n                <CardText>\n                  A simple way to create and modify monthly budgets and\n                  transactions. This is a capstone project for the Flatiron\n                  School.\n                  <br />\n                  <br />\n                  <p>\n                    <b>Technologies Used:</b>\n                    <br />\n                    <SiReact size={30} />\n                    &nbsp;&nbsp;\n                    <SiRails size={30} />\n                  </p>\n                </CardText>\n                <b>\n                  <a\n                    href=\"https://youtu.be/xrYvw2IYEmI\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    Demo\n                  </a>{\" \"}\n                  |{\" \"}\n                  <a\n                    href=\"https://github.com/catd825/budgetBuddy_frontend\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    Github\n                  </a>\n                </b>\n              </CardBody>\n            </Card>\n\n            <Card className=\"padding\">\n              <CardImg\n                top\n                width=\"100%\"\n                src=\"https://j.gifs.com/L7oDK4.gif\"\n                alt=\"feelingsOverflow\"\n              />\n              <CardBody>\n                <CardTitle>\n                  <b>feelingsOverflow</b>\n                </CardTitle>\n                <CardText>\n                  Forum-based app in which users post, comment, and vote on\n                  mental health questions and concerns.\n                  <br />\n                  <br />\n                  <p>\n                    <b>Technologies Used:</b>\n                    <br />\n                    <SiReact size={30} />\n                    &nbsp;&nbsp;\n                    <SiRails size={30} />\n                  </p>\n                </CardText>\n                <b>\n                  <a\n                    href=\"https://youtu.be/FfzPzYYGqw0\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    Demo\n                  </a>{\" \"}\n                  |{\" \"}\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href=\"https://github.com/catd825/feelingsOverflow-front-end\"\n                  >\n                    Github\n                  </a>\n                </b>\n              </CardBody>\n            </Card>\n\n            <Card className=\"padding\">\n              <CardImg\n                top\n                width=\"100%\"\n                src=\"https://j.gifs.com/NLqWyN.gif\"\n                alt=\"fluffy tail\"\n              />\n              <CardBody>\n                <CardTitle>\n                  <b>Fluffy Tail</b>\n                </CardTitle>\n                <CardText>\n                  Fluffy tail is a Ruby on Rails app that allows you to browse\n                  and favorite pets to adopt in the NY Metro area.\n                  <br />\n                  <br />\n                  <p>\n                    <b>Technologies Used:</b>\n                    <br />\n                    <SiRails size={30} />\n                  </p>\n                </CardText>\n                <b>\n                  <a\n                    href=\"https://youtu.be/scLpLe3zIxI\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    Demo\n                  </a>{\" \"}\n                  |{\" \"}\n                  <a\n                    href=\"https://github.com/catd825/fluffy_tail\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    Github\n                  </a>\n                </b>\n                {/* <Button>Button</Button> */}\n              </CardBody>\n            </Card>\n          </CardGroup>\n          <br />\n          <Button style={{ color: \"white\" }} to=\"/home\" tag={Link}>\n            return to main\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ProjectsContainer;\n","import styled from \"@emotion/styled\";\n\nexport const Left = styled.p({\n  textAlign: \"left\"\n});\n","import React from \"react\";\n// import { Button } from \"reactstrap\";\nimport { Left } from \"../styles\";\nimport { IPageProps } from \"../shared/interfaces\";\nimport styled from \"@emotion/styled\";\n\nconst AboutStyle = styled.div({\n  width: \"75%\",\n  margin: \"50px auto 100px auto\"\n});\n\nconst About = (props: IPageProps) => {\n  const { setPage } = props;\n  return (\n    <>\n      <AboutStyle>\n        <h3>ABOUT CATHY</h3>\n        <Left>\n          Hello! I'm Cathy D'Onofrio, full stack software engineer based in\n          Brooklyn, NY. Passionate about mission-driven companies, I proudly\n          work at insurtech startup{\" \"}\n          <a\n            href=\"http://www.sayrhino.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Rhino\n          </a>\n          , which creates more choices for renters regarding security deposits.\n        </Left>\n        <Left>\n          At Rhino, I primarily work with React with Typescript on the front\n          end, and Ruby on Rails on the backend. I was fortunate to have learned\n          most of this when I studied at the Flatiron School in 2020. I\n          additionally learned the principles of object oriented programming and\n          Vanilla Javascript. I've also dabbled in other languages and\n          frameworks, including NodeJS/Express (\n          <a href=\"https://medium.com/javascript-in-plain-english/creating-a-financial-app-with-the-plaid-api-nodejs-express-and-react-4e142066eb6c?source=friends_link&sk=ae4a53090618e6c9073f6bbb968ae18b\">\n            see project here\n          </a>\n          ) and NextJS.\n        </Left>\n        <Left>\n          Before I went to Flatiron, I worked as a finance manager in the\n          advertising industry for a decade. I utilized and grew my analytical\n          and communication skills and learned how to work collaboratively in a\n          very fast-paced environment.\n        </Left>\n        <Left>\n          Learning to code was always a goal of mine. Having loved HTML and CSS\n          in high school, I began to learn JavaScript and Ruby through\n          Codecademy and Flatiron prework. In early 2020, I made the big\n          decision to leave my steady career and begin a newer exciting one with\n          tons of opportunity.\n        </Left>\n\n        <Left>\n          In my downtime, I love cooking, reading, exploring New York City\n          (where I've lived since 2009), and traveling (when safe to do so!)\n        </Left>\n        <button\n          onClick={() => setPage(\"default\")}\n        >\n          return to main\n        </button>\n      </AboutStyle>\n    </>\n  );\n};\n\nexport default About;\n","import React from 'react';\n\nclass ContentContainer extends React.Component {\n\n    render() {\n        return(\n            <>\n            <div id=\"home\">\n                <h2>CATHY D'ONOFRIO | software engineer</h2>\n                <p>brooklyn-based full stack web developer.</p> \n            </div>\n            </>\n        )\n    }\n}\n\nexport default ContentContainer","import React from \"react\";\nimport { SiLinkedin, SiGithub, SiGmail, SiMedium } from \"react-icons/si\";\n\nexport const NewFooter = () => {\n  return (\n    <div className=\"footer\">\n      Find me: &nbsp;&nbsp;&nbsp;\n      <a\n        href=\"http://www.linkedin.com/in/cadonofrio\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <SiLinkedin size={20} />\n      </a>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      <a\n        href=\"http://www.github.com/catd825\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <SiGithub size={20} />\n      </a>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      <a href=\"mailto:catd825@gmail.com\">\n        <SiGmail size={20} />\n      </a>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      <a\n        href=\"http://catd825.medium.com\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <SiMedium size={20} />\n      </a>\n    </div>\n  );\n};\n\nexport default NewFooter;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\ninterface Props {\n  page: string;\n  setPage: (page: string) => void;\n}\n\nexport const NewNavbar: React.FC<Props> = (props: Props) => {\n  const { setPage } = props;\n\n  const NavbarDiv = styled.div({\n    backgroundColor: \"white\",\n    height: \"50px\",\n    margin: \"auto\"\n  });\n\n  const SpanWrapper = styled.div({\n    textAlign: \"center\",\n    paddingTop: \"10px\"\n  });\n  const NavSpan = styled.span({\n    padding: \"10px\"\n  });\n\n  return (\n    <NavbarDiv>\n      <SpanWrapper>\n        <NavSpan onClick={() => setPage(\"default\")}>home</NavSpan>\n        <NavSpan onClick={() => setPage(\"about\")}>about</NavSpan>\n        <NavSpan onClick={() => setPage(\"projects\")}>projects</NavSpan>\n      </SpanWrapper>\n    </NavbarDiv>\n  );\n};\n\nexport default NewNavbar;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport ProjectsContainer from \"./Containers/ProjectsContainer\";\nimport AboutContainer from \"./Containers/AboutContainer\";\nimport ContentContainer from \"./Containers/ContentContainer\";\nimport NewFooter from \"./Components/NewFooter.tsx\";\nimport NewNavbar from \"./Components/NewNavbar.tsx\";\nimport styled from \"@emotion/styled\";\n\nconst App = () => {\n  const PageWrapper = styled.div({\n    height: \"50%\"\n  });\n\n  const [page, setPage] = useState(\"default\");\n\n  let content;\n  if (page === \"about\") {\n    content = <AboutContainer setPage={setPage} page={page}/>;\n  } else if (page === \"projects\") {\n    content = <ProjectsContainer setPage={setPage} page={page}/>;\n  } else {\n    content = <ContentContainer />;\n  }\n\n  return (\n    <>\n      <NewNavbar setPage={setPage} page={page} />\n      <PageWrapper>{content}</PageWrapper>\n      <NewFooter />\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}