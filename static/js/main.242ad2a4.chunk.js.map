{"version":3,"sources":["Components/Navbar.js","Components/Footer.js","Containers/ContentContainer.js","Containers/ProjectsContainer.js","Containers/AboutContainer.js","App.js","serviceWorker.js","index.js"],"names":["Example","props","useState","isOpen","setIsOpen","Navbar","color","light","expand","fixed","NavbarBrand","href","className","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","to","tag","Link","target","rel","Footer","size","ContentContainer","id","React","Component","ProjectsContainer","state","location","activeScreen","history","replace","pathname","prevProps","prevState","snapshot","this","setState","CardGroup","Card","CardImg","top","width","src","alt","CardBody","CardTitle","CardText","Button","style","withRouter","About","console","log","App","data","path","render","AboutContainer","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"6WA4CeA,EA/BC,SAACC,GAAW,IAAD,EACGC,oBAAS,GADZ,mBAClBC,EADkB,KACVC,EADU,KAKzB,OAEI,kBAACC,EAAA,EAAD,CAAQC,MAAM,QAAQC,OAAK,EAACC,OAAO,KAAKC,MAAM,OAC5C,kBAACC,EAAA,EAAD,CAAaC,KAAK,MAClB,yBAAKC,UAAU,iBACf,kBAACC,EAAA,EAAD,CAAeC,QAPN,kBAAMV,GAAWD,MAQ1B,kBAACY,EAAA,EAAD,CAAWZ,OAAQA,EAAQa,QAAM,GAC/B,kBAACC,EAAA,EAAD,aAAKL,UAAU,UAAUI,QAAM,GAA/B,YAA0C,iBAExC,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASC,GAAG,SAASC,IAAKC,KAA1B,UAEF,kBAACJ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASC,GAAG,YAAYC,IAAKC,KAA7B,aAEF,kBAACJ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASI,OAAO,SAASC,IAAI,sBAAsBb,KAAK,sFAAxD,mB,OCdCc,EAfA,WACX,OACI,yBAAKb,UAAU,UAAf,yBAEI,uBAAGD,KAAK,wCAAwCY,OAAO,SAASC,IAAI,uBAAsB,kBAAC,IAAD,CAAYE,KAAM,MAFhH,2BAII,uBAAGf,KAAK,gCAAgCY,OAAO,SAASC,IAAI,uBAAsB,kBAAC,IAAD,CAAUE,KAAM,MAJtG,2BAMI,uBAAGf,KAAK,4BAA2B,kBAAC,IAAD,CAASe,KAAM,MANtD,2BAQI,uBAAGf,KAAK,4BAA4BY,OAAO,SAASC,IAAI,uBAAsB,kBAAC,IAAD,CAAUE,KAAM,QCE3FC,E,uKAZP,OACI,oCAEA,yBAAKC,GAAG,QACJ,mEACA,6E,GAReC,IAAMC,W,+DCO/BC,E,kDAEF,WAAY9B,GAAQ,IAAD,8BACf,cAAMA,IACD+B,MAAQ,EAAK/B,MAAMgC,SAASD,OAAS,CAACE,aAAc,YACzD,EAAKjC,MAAMkC,QAAQC,QAAQ,EAAKnC,MAAMgC,SAASI,SAAU,EAAKL,OAH/C,E,+DAMEM,EAAWC,EAAWC,GAEnCC,KAAKxC,MAAMgC,WAAaK,EAAUL,UACpCQ,KAAKC,SAASD,KAAKxC,MAAMgC,SAASD,S,+BAKpC,OACI,oCACA,yBAAKpB,UAAU,YAAYgB,GAAG,aAC1B,wCACA,6BACA,uBAAGhB,UAAU,QAAb,6EAC8E,2BAAG,uBAAGW,OAAO,SAASC,IAAI,sBAAsBb,KAAK,+BAAlD,UAAH,MAE9E,6BACI,kBAACgC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAMhC,UAAU,WACZ,kBAACiC,EAAA,EAAD,CAASC,KAAG,EAACC,MAAM,OAAOC,IAAI,gCAAgCC,IAAI,gBAClE,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,KAAW,2CACX,kBAACC,EAAA,EAAD,gIAEI,6BAAK,6BACL,2BAAG,iDAAyB,6BACxB,kBAAC,IAAD,CAAS1B,KAAM,KADnB,WACoC,kBAAC,IAAD,CAASA,KAAM,OAGvD,2BAAG,uBAAGf,KAAK,+BAA+BY,OAAO,SAASC,IAAI,uBAA3D,QAAH,MAA+F,uBAAGb,KAAK,kDAAkDY,OAAO,SAASC,IAAI,uBAA9E,aAInG,kBAACoB,EAAA,EAAD,CAAMhC,UAAU,WACZ,kBAACiC,EAAA,EAAD,CAASC,KAAG,EAACC,MAAM,OAAOC,IAAI,gCAAgCC,IAAI,qBAClE,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,KAAW,gDACX,kBAACC,EAAA,EAAD,uGAEI,6BAAK,6BACL,2BAAG,iDAAyB,6BACxB,kBAAC,IAAD,CAAS1B,KAAM,KADnB,WACoC,kBAAC,IAAD,CAASA,KAAM,OAGvD,2BAAG,uBAAGf,KAAK,+BAA+BY,OAAO,SAASC,IAAI,uBAA3D,QAAH,MAA+F,uBAAGD,OAAO,SAASC,IAAI,sBAAsBb,KAAK,yDAAlD,aAInG,kBAACiC,EAAA,EAAD,CAAMhC,UAAU,WACZ,kBAACiC,EAAA,EAAD,CAASC,KAAG,EAACC,MAAM,OAAOC,IAAI,gCAAgCC,IAAI,gBAClE,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,KAAW,2CACX,kBAACC,EAAA,EAAD,qHAEI,6BAAK,6BACL,2BAAG,iDAAyB,6BAC5B,kBAAC,IAAD,CAAS1B,KAAM,OAGnB,2BAAG,uBAAGf,KAAK,+BAA+BY,OAAO,SAASC,IAAI,uBAA3D,QAAH,MAA+F,uBAAGb,KAAK,yCAAyCY,OAAO,SAASC,IAAI,uBAArE,cAKvG,6BACA,kBAAC6B,EAAA,EAAD,CAAQC,MAAO,CAAEhD,MAAO,SAAWc,GAAG,QAAQC,IAAKC,KAAnD,oBAGR,6BAAK,6BAAK,6BAAK,kC,GA5EKO,IAAMC,WAmFvByB,cAAWxB,GCtFpByB,E,kDACF,WAAYvD,GAAQ,IAAD,8BACf,cAAMA,IACD+B,MAAQ,EAAK/B,MAAMgC,SAASD,OAAS,CAACE,aAAc,SACzD,EAAKjC,MAAMkC,QAAQC,QAAQ,EAAKnC,MAAMgC,SAASI,SAAU,EAAKL,OAH/C,E,+DAMEM,EAAWC,EAAWC,GAEnCC,KAAKxC,MAAMgC,WAAaK,EAAUL,UACpCQ,KAAKC,SAASD,KAAKxC,MAAMgC,SAASD,S,+BAMpC,OADAyB,QAAQC,IAAI,QAASjB,KAAKxC,MAAMgC,SAASD,OAErC,oCACA,yBAAKpB,UAAU,YAAYgB,GAAG,QAAQ0B,MAAO,CAACP,MAAO,QACjD,2CACA,6BAII,uBAAGnC,UAAU,QAAb,0IAIA,uBAAGA,UAAU,QAAb,+QAIA,uBAAGA,UAAU,QAAb,iXAIA,uBAAGA,UAAU,QAAb,uKACwK,4CADxK,MAC+L,yCAD/L,2CACwP,sCADxP,qGACwW,uDADxW,iCACqa,oCADra,QACsb,oCADtb,yBACwd,2BAAG,uBAAGD,KAAK,4LAAR,wBAD3d,wFAIA,6BACA,kBAAC0C,EAAA,EAAD,CAAQC,MAAO,CAAEhD,MAAO,SAAWc,GAAG,QAAQC,IAAKC,KAAnD,mBAER,6BAAK,6BAAK,6BAAK,kC,GA3CPO,IAAMC,WAiDXyB,cAAWC,GCzBXG,E,4MAlBb3B,MAAQ,CAAE4B,KAAM,M,uDAGd,OACE,yBAAKhD,UAAU,OACb,kBAAC,EAAD,MACA,6BAAK,6BAAK,6BAAK,6BAAK,6BAChB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOiD,KAAK,YAAYC,OAAQ,kBAAM,kBAAC,EAAD,SACtC,kBAAC,IAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,kBAACC,EAAD,SACnC,kBAAC,IAAD,CAAOF,KAAK,IAAIC,OAAQ,kBAAM,kBAAC,EAAD,UAEtC,kBAAC,EAAD,W,GAdUjC,IAAMC,WCEJkC,QACW,cAA7BC,OAAOhC,SAASiC,UAEe,UAA7BD,OAAOhC,SAASiC,UAEhBD,OAAOhC,SAASiC,SAASC,MACvB,2D,MCTNC,IAASN,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFO,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLrB,QAAQqB,MAAMA,EAAMC,c","file":"static/js/main.242ad2a4.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom'\n\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink\n} from 'reactstrap';\n\nconst Example = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n\n      <Navbar color=\"light\" light expand=\"md\" fixed=\"top\">\n        <NavbarBrand href=\"/\"></NavbarBrand>\n        <div className=\"center-navbar\">\n        <NavbarToggler onClick={toggle} />\n        <Collapse  isOpen={isOpen} navbar >\n          <Nav className=\"mr-auto\" navbar className=\"center-navbar\">\n\n            <NavItem>\n              <NavLink to=\"/about\" tag={Link}>about</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink to=\"/projects\" tag={Link}>projects</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://drive.google.com/file/d/1EBMrLIztzVdz2Dz_z-v8za1owINBu7PF/view?usp=sharing\">resum√©</NavLink>\n            </NavItem> \n          </Nav>\n        </Collapse>\n        </div>\n      </Navbar>\n\n  );\n}\n\nexport default Example;","import React from 'react';\nimport { SiLinkedin, SiGithub, SiGmail, SiMedium } from \"react-icons/si\";\n\n\n\nconst Footer = () => {\n    return(\n        <div className=\"footer\">\n            Find me:  &nbsp;&nbsp;&nbsp;\n            <a href=\"http://www.linkedin.com/in/cadonofrio\" target=\"_blank\" rel=\"noopener noreferrer\"><SiLinkedin size={20}/></a>\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            <a href=\"http://www.github.com/catd825\" target=\"_blank\" rel=\"noopener noreferrer\"><SiGithub size={20}/></a>\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            <a href=\"mailto:catd825@gmail.com\"><SiGmail size={20}/></a>\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            <a href=\"http://catd825.medium.com\" target=\"_blank\" rel=\"noopener noreferrer\"><SiMedium size={20}/></a>\n        </div>\n    )\n}\n\nexport default Footer","import React from 'react';\n\nclass ContentContainer extends React.Component {\n\n    render() {\n        return(\n            <>\n            \n            <div id=\"home\">\n                <h2>CATHY D'ONOFRIO | software engineer</h2>\n                <p>brooklyn-based full stack web developer.</p> \n            </div>\n            </>\n        )\n    }\n}\n\nexport default ContentContainer","import React from 'react'\nimport {\n    Card, CardImg, CardText, CardBody, CardGroup,\n    CardTitle, Button\n  } from 'reactstrap';\nimport { Link, withRouter } from 'react-router-dom'\nimport { SiReact } from \"react-icons/si\";\nimport { SiRails } from \"react-icons/si\";\n\nclass ProjectsContainer extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = this.props.location.state || {activeScreen: \"PROJECTS\"}; // In the ||, set default state.\n        this.props.history.replace(this.props.location.pathname, this.state); // Update state of current entry in history stack.\n      }\n\n      componentDidUpdate(prevProps, prevState, snapshot) {\n        // If Route has changed, update state (Ensures consistency between location state and Component state).\n        if (this.props.location !== prevProps.location) {\n          this.setState(this.props.location.state);\n        }\n    }\n\n    render(){\n        return (\n            <>\n            <div className=\"container\" id=\"portfolio\">\n                <h3>PROJECTS</h3>\n                <br/>\n                <p className=\"left\">\n                    Featured projects from Flatiron are below.  All projects are available on <b><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/catd825/\">Github</a>.</b>\n                </p>\n                <div>\n                    <CardGroup>\n                        <Card className=\"padding\">\n                            <CardImg top width=\"100%\" src=\"https://j.gifs.com/915YWB.gif\" alt=\"budgetBuddy\" />\n                            <CardBody>\n                            <CardTitle><b>budgetBuddy</b></CardTitle>\n                            <CardText>\n                                A simple way to create and modify monthly budgets and transactions.  This is a capstone project for the Flatiron School.\n                                <br/><br/>\n                                <p><b>Technologies Used:</b><br/>\n                                    <SiReact size={30}/>&nbsp;&nbsp;<SiRails size={30}/>\n                                </p>\n                            </CardText>\n                            <b><a href=\"https://youtu.be/xrYvw2IYEmI\" target=\"_blank\" rel=\"noopener noreferrer\">Demo</a> | <a href=\"https://github.com/catd825/budgetBuddy_frontend\" target=\"_blank\" rel=\"noopener noreferrer\">Github</a></b>\n                            </CardBody>\n                        </Card>\n\n                        <Card className=\"padding\">\n                            <CardImg top width=\"100%\" src=\"https://j.gifs.com/L7oDK4.gif\" alt=\"feelingsOverflow\" />\n                            <CardBody>\n                            <CardTitle><b>feelingsOverflow</b></CardTitle>\n                            <CardText>\n                            Forum-based app in which users post, comment, and vote on mental health questions and concerns.\n                                <br/><br/>\n                                <p><b>Technologies Used:</b><br/>\n                                    <SiReact size={30}/>&nbsp;&nbsp;<SiRails size={30}/>\n                                </p>\n                            </CardText>\n                            <b><a href=\"https://youtu.be/FfzPzYYGqw0\" target=\"_blank\" rel=\"noopener noreferrer\">Demo</a> | <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/catd825/feelingsOverflow-front-end\">Github</a></b>\n                            </CardBody>\n                        </Card>\n\n                        <Card className=\"padding\">\n                            <CardImg top width=\"100%\" src=\"https://j.gifs.com/NLqWyN.gif\" alt=\"fluffy tail\" />\n                            <CardBody>\n                            <CardTitle><b>Fluffy Tail</b></CardTitle>\n                            <CardText>\n                            Fluffy tail is a Ruby on Rails app that allows you to browse and favorite pets to adopt in the NY Metro area. \n                                <br/><br/>\n                                <p><b>Technologies Used:</b><br/>\n                                <SiRails size={30}/>\n                                </p>\n                            </CardText>\n                            <b><a href=\"https://youtu.be/scLpLe3zIxI\" target=\"_blank\" rel=\"noopener noreferrer\">Demo</a> | <a href=\"https://github.com/catd825/fluffy_tail\" target=\"_blank\" rel=\"noopener noreferrer\">Github</a></b>\n                            {/* <Button>Button</Button> */}\n                            </CardBody>\n                        </Card>\n                    </CardGroup>\n                    <br/>\n                    <Button style={{ color: 'white' }} to=\"/home\" tag={Link}>return to main</Button>\n                </div>\n            </div>\n            <br/><br/><br/><br/>\n            </>\n          );\n    }\n    \n}\n\nexport default withRouter(ProjectsContainer)","import React from 'react'\nimport { Button } from \"reactstrap\"\nimport { Link, withRouter } from \"react-router-dom\"\n\n\n\nclass About extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = this.props.location.state || {activeScreen: \"ABOUT\"}; // In the ||, set default state.\n        this.props.history.replace(this.props.location.pathname, this.state); // Update state of current entry in history stack.\n      }\n\n      componentDidUpdate(prevProps, prevState, snapshot) {\n        // If Route has changed, update state (Ensures consistency between location state and Component state).\n        if (this.props.location !== prevProps.location) {\n          this.setState(this.props.location.state);\n        }\n    }\n\n    render(){\n        console.log(\"state\", this.props.location.state)\n        return(\n            <>\n            <div className=\"container\" id=\"about\" style={{width: \"75%\"}}>\n                <h3>ABOUT CATHY</h3>\n                <br/>\n                {/* <img width=\"175px\" src={require('../images/cathy.png')} />\n                <br/><br/> */}\n                               \n                    <p className=\"left\">\n                        Hi!  I'm Cathy, and I'm based in Brooklyn, NY.  I graduated from the Software Engineering program at the Flatiron School in Fall 2020. \n                    </p>\n\n                    <p className=\"left\">\n                        Before Flatiron, I worked in a wide array of roles, primarily financial roles within advertising agencies, as well as data collection at a market research agency.  Agency experience strengthened my collaborative skills and ability to work in a fast paced environment.  \n                    </p>\n\n                    <p className=\"left\">\n                        Learning to code was always a goal of mine.  My interest in front-end development started back in high school when I built websites with HTML and CSS for fun.  When I went on to work in financial and market research roles after college, both of which required me to work with tons of data to build reports. Looking back, that fueled my love for backend development.\n                    </p>     \n\n                    <p className=\"left\">\n                        In 2020, I finally decided to make the leap into full-stack development.  At Flatiron, we learned object-oriented programming, SQL, ORM, ActiveRecord, MVC pattern (<b>Ruby on Rails</b>), <b>JavaScript</b> fundamentals and front-end frameworks (<b>ReactJS</b>).  After graduating bootcamp, I've had fun exploring new frameworks and databases, most recently <b>Node, Express, and Mongo</b>.  I've also begun to explore <b>Redux</b> and <b>OAuth</b> flows, including the <b><a href=\"https://medium.com/javascript-in-plain-english/creating-a-financial-app-with-the-plaid-api-nodejs-express-and-react-4e142066eb6c?source=friends_link&sk=ae4a53090618e6c9073f6bbb968ae18b\">Plaid API auth flow</a></b>.  I'm interested in a role where I can use these skills and continue to learn more!\n                    </p>  \n        \n                    <br/>\n                    <Button style={{ color: 'white' }} to=\"/home\" tag={Link}>return to main</Button>        \n            </div>\n            <br/><br/><br/><br/>\n            </>\n        )\n    }\n}\n\nexport default withRouter(About)","import React from 'react';\nimport './App.css';\nimport Navbar from './Components/Navbar'\nimport Footer from './Components/Footer.js'\nimport ContentContainer from './Containers/ContentContainer'\nimport ProjectsContainer from './Containers/ProjectsContainer'\nimport AboutContainer from './Containers/AboutContainer'\nimport { Route, Switch } from 'react-router-dom'\n\n\nclass App extends React.Component {\n\n  state = { data: null }\n\n  render() { \n    return (\n      <div className=\"App\">\n        <Navbar />\n        <br/><br/><br/><br/><br/>\n            <Switch>\n                <Route path=\"/projects\" render={() => <ProjectsContainer />} />  \n                <Route path=\"/about\" render={() => <AboutContainer />} /> \n                <Route path=\"/\" render={() => <ContentContainer />} />\n            </Switch>\n        <Footer/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}